# Generated by Django 5.2.3 on 2025-09-28 06:49

import django.db.models.deletion
import ecom.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ApplyJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254)),
                ('contact_number', models.CharField(max_length=15)),
                ('gender', models.CharField(blank=True, choices=[('', 'Gender'), ('M', 'Male'), ('F', 'Female'), ('O', 'Others')], default='', max_length=1)),
                ('dob', models.DateField()),
                ('job_code', models.CharField(max_length=10)),
                ('resume', models.FileField(upload_to=ecom.models.resume_upload_path)),
                ('resume_filename', models.CharField(default='', max_length=100)),
                ('analysed', models.IntegerField(choices=[(0, 'Unanalyzed'), (1, 'Analyzed')], default=0)),
            ],
        ),
        migrations.CreateModel(
            name='CreateJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_code', models.CharField(max_length=10, unique=True)),
                ('job_title', models.CharField(max_length=100)),
                ('job_description', models.TextField()),
                ('job_description_html', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ErrorMessages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('error_id', models.IntegerField(unique=True)),
                ('error_message', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='GooglepayLogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(max_length=250)),
                ('token_id', models.CharField(max_length=250)),
                ('card_last4', models.CharField(max_length=250)),
                ('address_city', models.CharField(max_length=250)),
                ('address_country', models.CharField(max_length=250)),
                ('address_state', models.CharField(max_length=250)),
                ('address_zip', models.CharField(max_length=250)),
                ('card_brand', models.CharField(max_length=250)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentErrorLogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.CharField(default='unknown', max_length=20)),
                ('error_message', models.TextField()),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('order_id', models.CharField(blank=True, max_length=250, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('customer_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('transaction_id', models.CharField(max_length=250)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='PaymentLogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(max_length=250)),
                ('payment_type', models.CharField(max_length=20)),
                ('user_id', models.IntegerField()),
                ('order_id', models.CharField(max_length=250)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PhonepeLogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(max_length=250)),
                ('merchantId', models.CharField(max_length=250)),
                ('payment_status', models.CharField(max_length=250)),
                ('phonepeTransactionId', models.CharField(max_length=250)),
                ('providerReferenceId', models.CharField(max_length=250)),
                ('checksum', models.CharField(max_length=250)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('product_image', models.ImageField(blank=True, max_length=250, null=True, upload_to='product_image/')),
                ('price', models.PositiveIntegerField()),
                ('description', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='StripeLogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_id', models.CharField(max_length=250, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('name', models.CharField(max_length=250)),
                ('email', models.CharField(max_length=250)),
                ('transaction_id', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='profile_pic/CustomerProfilePic/')),
                ('address', models.CharField(max_length=40)),
                ('mobile', models.CharField(max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=100, unique=True)),
                ('transaction_id', models.CharField(max_length=250, unique=True)),
                ('payment_type', models.CharField(choices=[('stripe', 'Stripe'), ('phonepe', 'PhonePe'), ('google-pay', 'Google Pay')], max_length=20)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('customer_email', models.EmailField(max_length=254)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('provider_payment_id', models.CharField(blank=True, max_length=250, null=True)),
                ('provider_response', models.JSONField(blank=True, default=dict)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('INITIATED', 'Initiated'), ('VALIDATED', 'Validated'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('EXPIRED', 'Expired')], default='PENDING', max_length=20)),
                ('is_validated', models.BooleanField(default=False)),
                ('validation_token', models.CharField(max_length=100, unique=True)),
                ('cart_data', models.JSONField(default=dict)),
                ('shipping_details', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('validated_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField()),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['session_id'], name='ecom_paymen_session_44b316_idx'), models.Index(fields=['transaction_id'], name='ecom_paymen_transac_4ee543_idx'), models.Index(fields=['validation_token'], name='ecom_paymen_validat_2e1911_idx'), models.Index(fields=['status'], name='ecom_paymen_status_bb228c_idx')],
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=50, null=True)),
                ('address', models.CharField(max_length=500, null=True)),
                ('mobile', models.CharField(max_length=20, null=True)),
                ('order_date', models.DateField(auto_now_add=True, null=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Order Confirmed', 'Order Confirmed'), ('Out for Delivery', 'Out for Delivery'), ('Delivered', 'Delivered')], max_length=50, null=True)),
                ('order_id', models.CharField(max_length=250)),
                ('transaction_id', models.CharField(max_length=250)),
                ('quantity', models.IntegerField(default=1)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ecom.customer')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ecom.product')),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecom.customer')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecom.product')),
            ],
        ),
        migrations.CreateModel(
            name='ResumeAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('candidate_name', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254)),
                ('contact_number', models.CharField(max_length=15)),
                ('final_score', models.FloatField()),
                ('skills_match', models.FloatField()),
                ('experience_score', models.FloatField()),
                ('education_score', models.FloatField()),
                ('keywords_match', models.FloatField()),
                ('overall_fit', models.FloatField()),
                ('growth_potential', models.FloatField()),
                ('recommendation_decision', models.CharField(max_length=20)),
                ('recommendation_reason', models.TextField()),
                ('recommendation_confidence', models.CharField(max_length=20)),
                ('skill_match_percentage', models.FloatField()),
                ('matching_skills', models.JSONField(blank=True, default=list)),
                ('missing_skills', models.JSONField(blank=True, default=list)),
                ('experience_level', models.CharField(max_length=20)),
                ('matching_experience', models.JSONField(blank=True, default=list)),
                ('experience_gaps', models.JSONField(blank=True, default=list)),
                ('education_level', models.CharField(max_length=20)),
                ('education_highlights', models.JSONField(blank=True, default=list)),
                ('is_fresher', models.BooleanField(default=True)),
                ('first_job_start_year', models.IntegerField(blank=True, null=True)),
                ('last_job_end_year', models.IntegerField(blank=True, null=True)),
                ('total_jobs_count', models.IntegerField(default=0)),
                ('average_job_change', models.CharField(blank=True, max_length=50, null=True)),
                ('strengths', models.JSONField(blank=True, default=list)),
                ('weaknesses', models.JSONField(blank=True, default=list)),
                ('red_flags', models.JSONField(blank=True, default=list)),
                ('cultural_fit_indicators', models.JSONField(blank=True, default=list)),
                ('salary_expectation_alignment', models.CharField(max_length=20)),
                ('onboarding_priority', models.CharField(max_length=20)),
                ('interview_focus_areas', models.JSONField(blank=True, default=list)),
                ('processing_time', models.FloatField()),
                ('processed_at', models.DateTimeField()),
                ('file_path', models.TextField()),
                ('file_size', models.BigIntegerField()),
                ('word_count', models.IntegerField()),
                ('success', models.BooleanField(default=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('application', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analysis', to='ecom.applyjob')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ResumeAttributes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analysis_json', models.TextField()),
                ('custom_attributes', models.TextField(default='{}')),
                ('analysis_success', models.BooleanField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('apply_resume', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resume_attributes', to='ecom.applyjob')),
            ],
        ),
        migrations.CreateModel(
            name='ResumeLogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_attributes', models.TextField()),
                ('created_by', models.CharField(max_length=50)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('apply_resume', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resume_logs', to='ecom.applyjob')),
                ('resume_attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attribute_logs', to='ecom.resumeattributes')),
            ],
        ),
    ]
